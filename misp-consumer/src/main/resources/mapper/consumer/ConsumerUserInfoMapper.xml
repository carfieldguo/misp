<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.groqdata.consumer.mapper.ConsumerUserInfoMapper">
    
    <!-- 服务购买方-账号信息ConsumerUserInfo对象字段映射 -->
    <resultMap type="ConsumerUserInfo" id="ConsumerUserInfoResult">
        <result property="id"    column="id"    />
        <result property="account"    column="account"    />
        <result property="password"    column="password"    />
        <result property="accountType"    column="account_type"    />
        <result property="certifyStatus"    column="certify_status"    />
        <result property="nickname"    column="nickname"    />
        <result property="avator"    column="avator"    />
        <result property="mobile"    column="mobile"    />
        <result property="email"    column="email"    />
        <result property="accountStatus"    column="account_status"    />
        <result property="recordStatus"    column="record_status"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
    </resultMap>

    <!-- 服务购买方-账号信息ConsumerUserInfo对象列表VO -->
    <sql id="selectConsumerUserInfoVo">
        select  cui.id, cui.account, cui.password, cui.account_type, cui.certify_status, cui.nickname, cui.avator, cui.mobile, cui.email, cui.account_status, cui.record_status, cui.create_time, cui.create_by, cui.update_time, cui.update_by 
        from consumer_user_info cui
    </sql>

    <!-- 通用查询服务购买方-账号信息ConsumerUserInfo列表 -->
    <select id="selectConsumerUserInfoList" parameterType="ConsumerUserInfo" resultMap="ConsumerUserInfoResult">
        <include refid="selectConsumerUserInfoVo"/>
        <where>  
            <if test="account != null  and account != ''"> and cui.account like concat('%', #{account}, '%')</if>
            <if test="password != null  and password != ''"> and cui.password = #{password}</if>
            <if test="accountType != null  and accountType != ''"> and cui.account_type = #{accountType}</if>
            <if test="certifyStatus != null  and certifyStatus != ''"> and cui.certify_status = #{certifyStatus}</if>
            <if test="nickname != null  and nickname != ''"> and cui.nickname like concat('%', #{nickname}, '%')</if>
            <if test="avator != null  and avator != ''"> and cui.avator = #{avator}</if>
            <if test="mobile != null  and mobile != ''"> and cui.mobile = #{mobile}</if>
            <if test="email != null  and email != ''"> and cui.email = #{email}</if>
            <if test="accountStatus != null  and accountStatus != ''"> and cui.account_status = #{accountStatus}</if>
            <if test="recordStatus != null  and recordStatus != ''"> and cui.record_status = #{recordStatus}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> 
                    and cui.create_time between #{params.beginCreateTime} and #{params.endCreateTime}
            </if> 
        </where>
        order by cui.create_time desc
    </select>
    
    
    <!-- 根据主键ID查询服务购买方-账号信息ConsumerUserInfo对象 -->
    <select id="selectConsumerUserInfoById" parameterType="Long" resultMap="ConsumerUserInfoResult">
        <include refid="selectConsumerUserInfoVo"/>
        where cui.id = #{id}
    </select>

    <!-- 新增服务购买方-账号信息ConsumerUserInfo对象 -->
    <insert id="insertConsumerUserInfo" parameterType="ConsumerUserInfo" useGeneratedKeys="true" keyProperty="id">
        insert into consumer_user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="account != null and account != ''">account,</if>
            <if test="password != null and password != ''">password,</if>
            <if test="accountType != null">account_type,</if>
            <if test="certifyStatus != null and certifyStatus != ''">certify_status,</if>
            <if test="nickname != null">nickname,</if>
            <if test="avator != null">avator,</if>
            <if test="mobile != null">mobile,</if>
            <if test="email != null">email,</if>
            <if test="accountStatus != null and accountStatus != ''">account_status,</if>
            <if test="recordStatus != null">record_status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="account != null and account != ''">#{account},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="accountType != null">#{accountType},</if>
            <if test="certifyStatus != null and certifyStatus != ''">#{certifyStatus},</if>
            <if test="nickname != null">#{nickname},</if>
            <if test="avator != null">#{avator},</if>
            <if test="mobile != null">#{mobile},</if>
            <if test="email != null">#{email},</if>
            <if test="accountStatus != null and accountStatus != ''">#{accountStatus},</if>
            <if test="recordStatus != null">#{recordStatus},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
         </trim>
    </insert>

    <!-- 更新服务购买方-账号信息ConsumerUserInfo对象 -->
    <update id="updateConsumerUserInfo" parameterType="ConsumerUserInfo">
        update consumer_user_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="account != null and account != ''">account = #{account},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="accountType != null">account_type = #{accountType},</if>
            <if test="certifyStatus != null and certifyStatus != ''">certify_status = #{certifyStatus},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="avator != null">avator = #{avator},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="email != null">email = #{email},</if>
            <if test="accountStatus != null and accountStatus != ''">account_status = #{accountStatus},</if>
            <if test="recordStatus != null">record_status = #{recordStatus},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </trim>
        where id = #{id}
    </update>

    <!-- 根据主键删除服务购买方-账号信息ConsumerUserInfo对象 -->
    <delete id="deleteConsumerUserInfoById" parameterType="Long">
        <!-- 物理删除$服务购买方-账号信息ConsumerUserInfo 
        delete from consumer_user_info where id = #{id}
        -->
        <!-- 逻辑删除服务购买方-账号信息ConsumerUserInfo -->
        update consumer_user_info set record_status = 'DELETED' 
        where id = #{id}
    </delete>

    <!-- 根据主键批量删除服务购买方-账号信息ConsumerUserInfo对象 -->
    <delete id="deleteConsumerUserInfoByIds" parameterType="String">
        <!-- 物理删除服务购买方-账号信息ConsumerUserInfo
        delete from consumer_user_info where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
        -->
        <!-- 逻辑删除服务购买方-账号信息ConsumerUserInfo -->
        update consumer_user_info set record_status = 'DELETED' 
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>